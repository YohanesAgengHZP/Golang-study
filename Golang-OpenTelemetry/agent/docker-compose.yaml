version: '3.9'

x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "3"

networks:
  network-instrumentasi:
    name: network-instrumentasi
    driver: bridge

volumes:
  prometheus-vol:
    name: instrumentasi-prometheus-vol
    driver: local
  # jaeger-vol:
  #   name: instrumentasi-jaeger-vol
  #   driver: local

services:
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.75.0
    container_name: skripsi-otelcol
    restart: always
    user: '0'
    environment:
      - TZ=${TZ}
    command: [ "--config=/etc/otelcol-config.yaml", "--config=/etc/otelcol-config-extras.yaml" ]
    volumes:
      - ./OTel/otel-config.yaml:/etc/otelcol-config.yaml:ro
      - ./OTel/otel-config-extras.yaml:/etc/otelcol-config-extras.yaml:ro
    ports:
      - "${OTELCOL_PORT_4317}:4317"           # OTLP over gRPC receiver
      - "${OTELCOL_PORT_4318}:4318"           # OTLP over HTTP receiver
      - "${OTELCOL_PORT_8888}:8888"           # metrics endpoint
      - "${OTELCOL_PORT_13133}:13133"         # extension health_check
      - "${OTELCOL_PORT_55679}:55679"         # extension zpages
      - "${OTELCOL_PORT_1777}:1777"           # extension pprof
      - "${OTELCOL_PORT_8889}:8889"           # prometheus exporter
      # - "${OTELCOL_PORT_9464}:9464"
      # - "${OTELCOL_PORT_55680}:55680"
      # - "${OTELCOL_PORT_55681}:55681"
      - "${OTELCOL_PORT_4319}:4319"           # OTLP over gRPC receiver for smr-monitoring
    networks:
      - network-instrumentasi
    logging: *logging

  prometheus:
    image: prom/prometheus:v2.37.6
    container_name: instrumentasi-prometheus
    restart: always
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=${PROMETHEUS_RETENTION}
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/data
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=remote-write-receiver
      - --storage.tsdb.allow-overlapping-blocks
    environment:
      - TZ=${TZ}
      - PROMETHEUS_RETENTION=${PROMETHEUS_RETENTION}
    volumes:
      - ./Prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml:ro
      - prometheus-vol:/data
      - prometheus-vol:/prometheus
    ports:
      - "${PROMETHEUS_PORT_9090}:9090"
    networks:
      - network-instrumentasi
    logging: *logging
  
  jaeger:
    image: jaegertracing/all-in-one:1.42
    container_name: tcel-smr-jaeger
    restart: always
    command:
      - "--query.base-path"
      - "/jaeger/ui"
      - "--log-level=DEBUG"
      - "--badger.span-store-ttl=${JAEGER_RETENTION}"
    environment:
      - TZ=${TZ}
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    volumes:
      - ./Jaeger/:/badger
    ports:
      - ${JAEGER_PORT_16686}:16686          # Jaeger UI
      - ${JAEGER_PORT_14268}:14268          # accept jaeger.thrift directly from client
      - ${JAEGER_PORT_14250}:14250          # accept model.proto | OTLP default port
    networks:
      - network-instrumentasi
    logging: *logging